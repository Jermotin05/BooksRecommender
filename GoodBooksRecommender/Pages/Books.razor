@inject IJSRuntime JSRuntime
@page "/books/{userID}"

@inject NavigationManager NavigationManager
@inherits Base

@using GoodBooksRecommender._Objects
@using GoodBooksRecommender.Services
@inject AppService AppSvc


<section class="product-grid p-bottom-100">
    <h2 style="text-align:center;text-decoration:underline;padding-bottom:25px;">All Books</h2>
    <BookFilter></BookFilter>
    <div class="container">
        <div class="row">
            <!-- Start .product-list -->
            <div class="col-md-12 product-list">
                <div class="row">                    
                    @foreach(var book in VisibleBooks)
                    {
                        <div class="col-lg-4 col-md-6">
                            <div class="product-single latest-single" style="cursor:pointer" @onclick='((e)=>NavigateToDetails(book.BookID))'>
                                <!-- Ends: .product-thumb -->
                                <div class="product-excerpt" style="border-color: black;border-width: thin;border-style: solid;min-height:490px;">
                                    <h3>
                                        <a>@book.Title</a>
                                    </h3>
                                    <ul class="titlebtm">
                                        <li>
                                            <h5 style="text-decoration:underline;"><a>@book.Authors</a></h5>
                                        </li>                                        
                                    </ul>
                                    <ul class="product-facts clearfix">
                                        <li class="product_cat">
                                            <p><a>ISBN: @book.ISBN</a></p>
                                        </li>
                                        <li class="product_cat">
                                            <p><a>ISBN(13): @book.ISBN13</a></p>
                                        </li>
                                        <li class="product_cat">
                                            <p><a>Ratings Count: @book.Ratings_Count</a></p>
                                        </li>
                                    </ul>

                                    <ul class="product-facts clearfix">
                                        <li class="price">Pages: @book.NumPages</li>

                                        @if (UserBooks.Any(ub => ub.BookID == book.BookID))
                                        {
                                            <li style="cursor:pointer;" class="product-fav" @onclick='((e)=>RemoveFromUserCollection(book))'>
                                                <i class="fas fa-heart"></i>
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="product-fav" @onclick='((e)=>AddToUserCollection(book))'>
                                                <span class="icon-heart" title="Add to collection/Mark Read" data-toggle="tooltip"></span>
                                            </li>
                                        }

                                        <li class="product-rating" title="Average Rating: @(book.AverageRating)">
                                            @{
                                                var fullstars = Convert.ToInt32(book.AverageRating.Substring(0, 1));
                                                var halfstar = false;
                                                var nostars = 0;
                                                var decimals = Convert.ToInt32(book.AverageRating.Substring(2));
                                                if (decimals >= 25 && decimals < 75)
                                                {
                                                    halfstar = true;
                                                }
                                                else if (decimals >= 75)
                                                {
                                                    fullstars += 1;
                                                }

                                                switch (fullstars)
                                                {
                                                    case 0:
                                                        if (halfstar)
                                                            nostars = 4;
                                                        else
                                                            nostars = 5;
                                                        break;
                                                    case 1:
                                                        if (halfstar)
                                                            nostars = 3;
                                                        else
                                                            nostars = 4;
                                                        break;
                                                    case 2:
                                                        if (halfstar)
                                                            nostars = 2;
                                                        else
                                                            nostars = 3;
                                                        break;
                                                    case 3:
                                                        if (halfstar)
                                                            nostars = 1;
                                                        else
                                                            nostars = 2;
                                                        break;
                                                    case 4:
                                                        if (halfstar)
                                                            nostars = 0;
                                                        else
                                                            nostars = 1;
                                                        break;
                                                    case 5:
                                                        if (halfstar)
                                                            nostars = 0;
                                                        else
                                                            nostars = 0;
                                                        break;
                                                    default:
                                                        nostars = 0;
                                                        break;
                                                }


                                            }
                                            <ul class="list-unstyled">
                                                @for (var i = 0; i < fullstars; i++)
                                                {
                                                    <li style="color:#ffb822"><i class="fas fa-star"></i></li>
                                                }
                                                @if (halfstar)
                                                {
                                                    <li style="color:#ffb822"><i class="fas fa-star-half-alt"></i></li>
                                                }
                                                @for (var i = 0; i < nostars; i++)
                                                {
                                                    <li style="color:#ffb822"><i class="far fa-star"></i></li>
                                                }
                                            </ul>
                                        </li>
                                    </ul>
                                </div>
                                <!-- Ends: .product-excerpt -->
                            </div><!-- Ends: .product-single -->
                        </div><!-- ends: .col-lg-4 -->
                    }

                </div>
                <!-- Start Pagination -->
                <nav class="pagination-default">
                    <ul class="pagination">
                        <li class="page-item" style="padding-right:80px;">
                            <a class="page-link" @onclick='((e)=>PrevPage())' aria-label="Previous">
                                <span aria-hidden="true"><i class="fas fa-long-arrow-alt-left"></i></span>
                                <span class="sr-only">Previous</span>
                            </a>
                        </li>                       
                        <li class="page-item">
                            <a class="page-link" @onclick='((e)=>NextPage())' aria-label="Next">
                                <span aria-hidden="true"><i class="fas fa-long-arrow-alt-right"></i></span>
                                <span class="sr-only">Next</span>
                            </a>
                        </li>
                    </ul>
                </nav><!-- Ends: .pagination-default -->
            </div>
            <!-- Ends: .product-list -->
        </div>
    </div>
</section><!-- ends: .product-grid -->

@code {
    [Parameter]
    public string userID { get; set; }
    public static int PaginationStart { get; set; } = 0;
    public static int PaginationEnd { get; set; } = 25;
    public List<Book> VisibleBooks { get; set; }

    protected override void OnInitialized()
    {
        //Update User Books
        UserBooks = AppSvc.GetUserBooks(UserID).OrderBy(b=>b.BookID).ToList();

        //Get all the books one time, wont need to update this
        if(Books == null)
        {
            Books = AppSvc.GetBooks();
        }

        //init visible books and add books based on pagination
        VisibleBooks = new List<Book>();
        for (var i = PaginationStart; i < PaginationEnd; i++)
        {
            VisibleBooks.Add(Books[i]);
        }

    }

    //update pagination results
    public void UpdatePagination()
    {
        //empty the list and reset with new 25 books based on  pagination
        VisibleBooks = new List<Book>();
        for (var i = PaginationStart; i < PaginationEnd; i++)
        {
            VisibleBooks.Add(Books[i]);
        }
    }

    //next page of results
    public void NextPage()
    {
        PaginationStart += 25;
        PaginationEnd += 25;
        UpdatePagination();
    }

    //prev page results
    public void PrevPage()
    {
        PaginationStart -= 25;
        PaginationEnd -= 25;

        if (PaginationStart < 0)
            PaginationStart = 0;
        if (PaginationEnd < 25)
            PaginationEnd = 25;
        UpdatePagination();
    }

    //Add this book to this users read books
    public void AddToUserCollection(Book _book)
    {
        var userBook = new UserBook()
        {
            UserID = UserID,
            BookID = _book.BookID,
            Title = _book.Title,
            Authors = _book.Authors,
            AverageRating = _book.AverageRating,
            ISBN = _book.ISBN,
            ISBN13 = _book.ISBN13,
            Language = _book.ISBN13,
            NumPages = _book.NumPages,
            PublicationDate = _book.PublicationDate,
            Publisher = _book.Publisher,
            Ratings_Count = _book.Ratings_Count,
            TextReviews_count = _book.TextReviews_count
        };

        UserBooks.Add(userBook);
        AppSvc.MarkBookRead(userBook);
    }

    //remove this book from users read books
    public void RemoveFromUserCollection(Book _book)
    {
        var userBook = new UserBook()
        {
            UserID = UserID,
            BookID = _book.BookID,
        };

        UserBooks.Remove(userBook);
        AppSvc.RemoveUserBook(userBook);
        UserBooks = AppSvc.GetUserBooks(UserID).OrderBy(b => b.BookID).ToList();
    }

    private void NavigateToDetails(string bookId)
    {
        NavigationManager.NavigateTo("/bookDetails/" + bookId + "/" + UserID);
    }
}
<style>
    a{
       cursor:pointer;
    }
</style>
